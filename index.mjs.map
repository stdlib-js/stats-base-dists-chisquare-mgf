{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport pow from '@stdlib/math-base-special-pow';\n\n\n// MAIN //\n\n/**\n* Evaluates the moment-generating function (MGF) for a chi-squared distribution with degrees of freedom `k` at a value `t`.\n*\n* @param {number} t - input value\n* @param {NonNegativeNumber} k - degrees of freedom\n* @returns {number} evaluated MGF\n*\n* @example\n* var y = mgf( 0.4, 2 );\n* // returns ~5.0\n*\n* @example\n* var y = mgf( -1.0, 5.0 );\n* // returns ~0.0642\n*\n* @example\n* var y = mgf( 0.0, 10.0 );\n* // returns 1.0\n*/\nfunction mgf( t, k ) {\n\tif (\n\t\tisnan( t ) ||\n\t\tisnan( k ) ||\n\t\tk < 0.0 ||\n\t\tt >= 0.5\n\t) {\n\t\treturn NaN;\n\t}\n\treturn pow( 1-(2*t), -k/2 );\n}\n\n\n// EXPORTS //\n\nexport default mgf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function';\nimport isnan from '@stdlib/math-base-assert-is-nan';\nimport pow from '@stdlib/math-base-special-pow';\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the moment-generating function (MGF) of a chi-squared distribution with degrees of freedom `k`.\n*\n* @param {NonNegativeNumber} k - degrees of freedom\n* @returns {Function} MGF\n*\n* @example\n* var mgf = factory( 1.0 );\n*\n* var y = mgf( 0.2 );\n* // returns ~1.291\n*\n* y = mgf( 0.4 );\n* // returns ~2.236\n*/\nfunction factory( k ) {\n\tif ( isnan( k ) || k < 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn mgf;\n\n\t/**\n\t* Evaluates the moment-generating function (MGF) for a chi-squared distribution.\n\t*\n\t* @private\n\t* @param {number} t - input value\n\t* @returns {number} evaluated MGF\n\t*\n\t* @example\n\t* var y = mgf( 0.5 );\n\t* // returns <number>\n\t*/\n\tfunction mgf( t ) {\n\t\tif ( isnan( t ) || t >= 0.5 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn pow( 1-(2*t), -k/2 );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Moment-generating function (MGF) for a chi-squared distribution.\n*\n* @module @stdlib/stats-base-dists-chisquare-mgf\n*\n* @example\n* import mgf from '@stdlib/stats-base-dists-chisquare-mgf';\n*\n* var y = mgf( 0.4, 2 );\n* // returns ~5.0\n*\n* y = mgf( -1.0, 5.0 );\n* // returns ~0.0642\n*\n* y = mgf( 0.0, 10.0 );\n* // returns 1.0\n*\n* @example\n* import { factory as factory } from '@stdlib/stats-base-dists-chisquare-mgf';\n*\n* var mgf = factory( 1.0 );\n*\n* var y = mgf( 0.2 );\n* // returns ~1.291\n*\n* y = mgf( 0.4 );\n* // returns ~2.236\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport factory from './factory.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["mgf","t","k","isnan","NaN","pow","factory","constantFunction","setReadOnly","main"],"mappings":";;uYA+CA,SAASA,EAAKC,EAAGC,GAChB,OACCC,EAAOF,IACPE,EAAOD,IACPA,EAAI,GACJD,GAAK,GAEEG,IAEDC,EAAK,EAAG,EAAEJ,GAAKC,EAAE,EACzB,CCbA,SAASI,EAASJ,GACjB,OAAKC,EAAOD,IAAOA,EAAI,EACfK,EAAkBH,KAe1B,SAAcH,GACb,GAAKE,EAAOF,IAAOA,GAAK,GACvB,OAAOG,IAER,OAAOC,EAAK,EAAG,EAAEJ,GAAKC,EAAE,EACxB,CACF,CCTAM,EAAAC,EAAA,UAAAH"}